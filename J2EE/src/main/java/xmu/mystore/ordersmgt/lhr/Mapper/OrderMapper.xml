<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xmu.mystore.ordersmgt.lhr.Mapper.OrderMapper">

	<!-- 属性id表示resultMap的表示,type表示你需要你需要映射的POJO -->
	<resultMap id="OrderDataMap" type="xmu.mystore.ordersmgt.lhr.model.Order">

		<!-- property表示POJO的属性名称，column表示数据库SQL的列名，id对应对象的主键 -->

		<id column="order_id" property="order_id" jdbcType="INTEGER" />
		<result column="user_id" property="user_id" jdbcType="INTEGER" />
		<result column="order_status" property="order_status" jdbcType="INTEGER" />
		<result column="consignee" property="consignee" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="zipcode" property="zipcode" jdbcType="VARCHAR" />
		<result column="telephone" property="telephone" jdbcType="VARCHAR" />
		<result column="order_price" property="order_price" jdbcType="DOUBLE" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="total_weight" property="total_weight" jdbcType="DOUBLE" />
		<result column="add_time" property="add_time" jdbcType="INTEGER" />
		<result column="expressCode" property="expressCode" jdbcType="VARCHAR" />
		<result column="isUrgency" property="isUrgency" jdbcType="VARCHAR" />
	</resultMap>

	<select id="getAllOrder" resultMap="OrderDataMap">
		SELECT * FROM 142450_order_info
	</select>

	<select id="getOrderByOrderId" parameterType="long" resultMap="OrderDataMap">
		SELECT * from 142450_order_info where order_id=#{order_id}
	</select>

	<update parameterType="xmu.mystore.ordersmgt.lhr.model.Order"
		id="updateOrder">
		update 142450_order_info set
		order_status=#{order_status},
		remark=#{remark},
		expressCode=#{expressCode},
		isUrgency=#{isUrgency},
		address=#{address},
		telephone=#{telephone}
		where order_id=#{order_id}
	</update>
	
	<select id="searchOrder" parameterType="xmu.mystore.ordersmgt.lhr.model.SearchOrder"
		resultMap="OrderDataMap">
		select distinct 142450_order_info.order_id,
		142450_order_info.total_weight,142450_order_info.zipcode,
		142450_order_info.add_time,142450_order_info.consignee,142450_order_info.address,
		142450_order_info.telephone,142450_order_info.order_price,142450_order_info.user_id,142450_order_info.order_status,
		142450_order_info.remark,142450_order_info.expressCode,142450_order_info.isUrgency from
		142450_order_goods,142450_order_info where 142450_order_info.order_status != -1
		<if test="order_id != 0 and order_id!=null">
			AND 142450_order_info.order_id = #{order_id}
			AND 142450_order_info.order_id = 142450_order_goods.order_id
		</if>
		<if test="goods_name != '' and goods_name != null">
			AND 142450_order_info.order_id = 142450_order_goods.order_id
			AND 142450_order_goods.goods_name = #{goods_name}
		</if>

		<if test="consignee != '' and consignee != null">
			AND 142450_order_info.consignee LIKE
			CONCAT('%','${consignee}','%' )
		</if>
		<if test="isUrgency != '' and isUrgency != null">
			AND 142450_order_info.isUrgency =#{isUrgency}
		</if>
		<if test="order_status != -1">
			AND 142450_order_info.order_status = #{order_status}
		</if>

		<if test="after_add_time != 0 and before_add_time != 0">
			AND 142450_order_info.add_time between #{before_add_time} and
			#{after_add_time}
		</if>
	</select>


	<select id="getOrderByUser_id" parameterType="long"
		resultMap="OrderDataMap">
		select * from 142450_order_info where 142450_order_info.user_id=#{user_id};
	</select>
	
	<select id="getOrderByStatus" resultMap="OrderDataMap">
		select * from 142450_order_info where 142450_order_info.user_id=#{0} AND 142450_order_info.status=#{1};
	</select>
	
	<update parameterType="long" id="receiveOrder" >
		update 142450_order_info set
		order_status=4,
		where order_id=#{order_id}
	</update>
	
	
	<update parameterType="long" id="cancelOrder" >
		update 142450_order_info set
		order_status=5,
		where order_id=#{order_id}
	</update>
	

</mapper>