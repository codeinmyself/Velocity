<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xmu.mystore.orderindex.tangkai.mapper.OrderMapper">

	<!-- 属性id表示resultMap的表示,type表示你需要你需要映射的POJO -->
	<resultMap id="OrderDataMap" type="xmu.mystore.orderindex.tangkai.model.Order">

		<!-- property表示POJO的属性名称，column表示数据库SQL的列名，id对应对象的主键 -->

		<id column="order_id" property="order_id" jdbcType="INTEGER" />
		<result column="user_id" property="user_id" jdbcType="INTEGER" />
		<result column="order_sn" property="order_sn" jdbcType="VARCHAR" />
		<result column="order_status" property="order_status" jdbcType="INTEGER" />
		<result column="consignee" property="consignee" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="zipcode" property="zipcode" jdbcType="VARCHAR" />
		<result column="telephone" property="telephone" jdbcType="VARCHAR" />
		<result column="order_price" property="order_price" jdbcType="DOUBLE" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="total_weight" property="total_weight" jdbcType="DOUBLE" />
		<result column="add_time" property="add_time" jdbcType="INTEGER" />
		<result column="shipped_time" property="shipped_time" jdbcType="INTEGER" />
		<result column="make_time" property="make_time" jdbcType="INTEGER" />
		<result column="expressCode" property="expressCode" jdbcType="VARCHAR" />
		<result column="isUrgency" property="isUrgency" jdbcType="VARCHAR" />
	</resultMap>
	
	<select id="getOrderByUser_id" resultMap="OrderDataMap">
		SELECT * FROM 142489_order_info
		where user_id = #{user_id}
	</select>
	
	<select id="getOrderByStatus" resultMap="OrderDataMap">
		SELECT * FROM 142489_order_info
		where user_id = #{user_id} and order_status = #{order_status}
	</select>
	
	<update id="receiveOrder">
		update 142489_order_info set
		order_status=4,
		receive_time=#{receive_time}
		where
		order_id=#{order_id}
	</update>

	<update id="cancelOrder">
		update 142489_order_info set
		order_status=5,
		cancel_time=#{cancel_time}
		where
		order_id=#{order_id}
	</update>
	
	<select id="getAllOrder" resultMap="OrderDataMap">
		SELECT * FROM
		142489_order_info
	</select>

	<select id="getOrderByOrderId" parameterType="long" resultMap="OrderDataMap">
		SELECT * from 142489_order_info where order_id=#{order_id}
	</select>

	<select id="getShoppingCart" parameterType="long" resultMap="OrderDataMap">
		select * from 142489_order_info where user_id=#{user_id} AND
		order_status=0
	</select>

	<update parameterType="xmu.mystore.orderindex.tangkai.model.Order"
		id="updateOrder">
		update 142489_order_info set
		order_status=#{order_status},
		remark=#{remark},
		expressCode=#{expressCode},
		consignee=#{consignee},
		isUrgency=#{isUrgency},
		address=#{address},
		telephone=#{telephone},
		total_weight=#{total_weight},
		order_price=#{order_price},
		shipped_time=#{shipped_time},
		make_time=#{make_time},
		pay_time=#{pay_time},
		order_sn=#{order_sn}
		where
		order_id=#{order_id}
	</update>

	<insert id="addOrder" parameterType="xmu.mystore.orderindex.tangkai.model.Order">
		<selectKey resultType="long" keyProperty="order_id" order="AFTER">
			select @@IDENTITY as order_id
		</selectKey>
		insert into 142489_order_info values(null, #{order_sn},
		#{user_id},#{order_status}, #{consignee},#{address}, #{zipcode},
		#{telephone}, null, #{order_price},
		#{order_price},#{remark},#{total_weight}, null, #{add_time}, null,
		null, null, null,null, null, #{isUrgency})
	</insert>
</mapper>